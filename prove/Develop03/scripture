public class Scripture
{
    private List<word> verse = new List<word>();

    private Reference reference;

    private Random random = new Random();

    private int HideRandomWords;

    private bool allowToHide = false;

    public Scripture(string scripture, Reference reference)
    : this(scripture, reference, 3)
}
{
    //Initialize a scripture with a verse (scripture) and reference.
    // the number of visible words that should be hidden each time it is displayed
    public Scripture(string scripture, Reference reference, int wordsToHide)
    {
        parseScripture(scripture);
        this.reference = reference;
        this.wordsToHide = wordsToHide;
    }
    //Format the verse and reference into a string. It also prevent hiding the first time it is displaying.
    // so that it shows the entire verse.
    public override string ToString()
    {
        //only hide after showing the verse once
        if (alloHiding) hidewords();

        StringBuildre = new stringBuildre();
        sb.AppendLine(reference.ToString());
        sb.AppendLine();
        sb.Append(string.Join(" ",verse.Select(word => word.ToString)));
        sb.AppendLine();
        sb.AppendLine();
        sb.AppendLine("Press enter to hide words, or 'quit' to exit.")

        //Verse has been shown so allow hiding when showing again
        allowHiding = true

        return sb.ToString();

    }
    // Is true when all word  in the verse have been hidden
    public bool isFinished
    {
        var count = verse.Count(word => word.getIsVisible());
        return count ==0;
    }
    //Hides a random number of visible words. The number of word to hide is determined by wordsToHide.
    private void hidewords()
    {
        //Get all visible words
        List<word>visiblewords = verse.FindAll(word => word.getIsVisible());

        //Hide some of the visible words randomly
        for (int i=0; i<Math.Min(wordsToHide, visiblewords.Count); i++)
        {
            int index = random.Next(visiblewords.Count);
            visiblewords[index].hide();
            visiblewords = verse.FindAll(word => word.getIsVisible());
        }
    }
    parse a scripture verse (string)into words
    private void parseScripture(string scripture)
    {
        List<string> words = scripture.split(" ").ToList();
        foreach (string word in words)
        {
            this.verse.Add(new word.Trial());
        }
        {
            
        }
    }
}